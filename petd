#! /usr/bin/env python

from pet.models import *
import inotifyx
import os
import re
from copy import copy
import subprocess

def setup_watch(path):
  fd = inotifyx.init()
  try:
    inotifyx.add_watch(fd, path, inotifyx.IN_CLOSE_WRITE|inotifyx.IN_MOVED_TO)
    return fd
  except:
    os.close(fd)

def run_single_action(command, options):
  real_command = copy(command)
  real_command.extend(options)
  print "I: Running {0}".format(real_command)
  retcode = subprocess.call(real_command)
  if retcode:
    print "E: Exited with code {0}".format(retcode)

def run_action(actions, filename):
  action_taken = False
  for action in actions:
    match = action['re'].search(filename)
    if match:
      run_single_action(action['command'], match.groups())
      action_taken = True
  return action_taken

session = Session()
path = session.query(Config.value).filter_by(key='request_directory').scalar() or '/srv/pet.debian.net/requests'
session.rollback()
watch = setup_watch(path)

actions = [
  dict(re=re.compile('\Aupdate-([A-Za-z0-9-]+)\Z'), command=['update-repository']),
  dict(re=re.compile('\Aarchive-([A-Za-z0-9-]+)\Z'), command=['update-archive']),
  dict(re=re.compile('\Abts-([A-Za-z0-9-]+)\Z'), command=['update-bts']),
  dict(re=re.compile('\Awatch\Z'), command=['update-watch']),
]

while True:
  inotifyx.get_events(watch)
  for filename in os.listdir(path):
    if run_action(actions, filename):
      os.unlink(os.path.join(path, filename))
    else:
      print "E: Unknown request '{0}'".format(filename)
